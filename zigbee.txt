//expt 2 (zigbee)

Node A
int Led = 13;          // define LED Interface
int buttonpin = 7;     // define Metal Touch Sensor Interface
int val;               // define numeric variable

void setup() {
  Serial.begin(9600);
  pinMode(Led, OUTPUT);        // define LED as output interface
  pinMode(buttonpin, INPUT);   // define metal touch sensor as input interface
}

void loop() {
  val = digitalRead(buttonpin); // read sensor value
  // Serial.println(val);        // uncomment for debugging

  if (val == 1) {  // When the metal touch sensor detects a signal, LED flashes
    digitalWrite(Led, HIGH);
    Serial.println(val);
    delay(1000);  // keep LED ON for 1 sec
  } else {
    digitalWrite(Led, LOW);
    Serial.println(val);
    delay(1000);  // check every 1 sec
  }
}

Node B

/* ZigbeeSerialBridge.ino
   Bidirectional bridge: USB Serial <-> CC2530 (SoftwareSerial)
   Use pins 10 (RX) and 11 (TX) for SoftwareSerial
*/

#include <SoftwareSerial.h>

const uint8_t ZB_RX_PIN = 10; // Arduino reads here (connected to CC2530 TX)
const uint8_t ZB_TX_PIN = 11; // Arduino writes here (connected to CC2530 RX)

SoftwareSerial zbSerial(ZB_RX_PIN, ZB_TX_PIN); // (rx, tx)

void setup() {
  Serial.begin(9600);     // USB -> laptop
  zbSerial.begin(9600);   // UART to CC2530; match module baud
  Serial.println("Zigbee bridge ready");
}

void loop() {
  // forward from laptop -> CC2530
  while (Serial.available()) {
    uint8_t b = Serial.read();
    zbSerial.write(b);
  }

  // forward from CC2530 -> laptop
  while (zbSerial.available()) {
    uint8_t b = zbSerial.read();
    Serial.write(b);
  }
}

Zigbee module 2
Arduino Uno 2 
Cable 2
Jumper wire 8 

P03 - 10 RX
P02 - 11 TX 
Vcc - 3.3 v

Gnd - gnd


//expt 1  introduction to ardino board and led
int ledPin = 13;
void setup() {
  // put your setup code here, to run once:
  pinMode(ledPin, OUTPUT);

}

void loop() {
  // put your main code here, to run repeatedly:
  digitalWrite(ledPin, HIGH);
  delay(1000);
  digitalWrite(ledPin, LOW);
  delay(1000);
}

//expt 2 interface Arduino with zigbee
void setup() {
  Serial.begin(9600);   // Set baud rate
  pinMode(13, OUTPUT);  // LED pin
}

void loop() {
  if (Serial.available()) {
    char data = Serial.read();
    Serial.print("Received: ");
    Serial.println(data);

    if (data == '1') {
      digitalWrite(13, HIGH);
    } 
    else if (data == '0') {
      digitalWrite(13, LOW);
    }
  }
}

expt 3 
#include <SoftwareSerial.h>

SoftwareSerial mySerial(9, 10);

void setup() {
  mySerial.begin(9600);
  Serial.begin(9600);
  delay(1000);
  Serial.println("Type 's' to send SMS or 'r' to receive SMS");
}

void loop() {
  if (Serial.available() > 0) {
    switch (Serial.read()) {
      case 's':
        mySerial.println("AT+CMGF=1");
        delay(1000);
        mySerial.println("AT+CMGS=\"+91xxxxxxxxx\"");
        delay(1000);
        mySerial.println("Technolab creation");
        delay(100);
        mySerial.write(26);
        delay(1000);
        Serial.println("SMS Sent!");
        break;
      case 'r':
        mySerial.println("AT+CMTI=2,2,0,0,0");
        delay(1000);
        Serial.println("Ready to receive SMS...");
        break;
    }
  }

  if (mySerial.available() > 0) {
    Serial.write(mySerial.read());
  }
}

expt 4
void setup() {
  // Set pin 13 (built-in LED) as an output
  pinMode(13, OUTPUT);
  // Start serial communication at 9600 baud
  Serial.begin(9600);
}

void loop() {
  // Check if data is available to read from the serial monitor
  if (Serial.available()) {
    // Read the incoming byte (character)
    char cmd = Serial.read();

    // If the received character is '1', turn the LED on (HIGH)
    if (cmd == '1') {
      digitalWrite(13, HIGH);
    }

    // If the received character is '0', turn the LED off (LOW)
    if (cmd == '0') {
      digitalWrite(13, LOW);
    }
  }
}
